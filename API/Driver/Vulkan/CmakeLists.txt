cmake_minimum_required(VERSION 3.19)
cmake_policy(SET CMP0074 NEW)
project(OCRA-API-Implementation LANGUAGES CXX)

find_package(Vulkan REQUIRED)

set(
  OCRA_GL_SHADER_SUBPASSINPUT_OFFSET 16
  CACHE STRING "OpenGL Subpass input emulation offset"
)

set(
  OCRA_GL_SHADER_PUSHCONSTANT_BINDING 64
  CACHE STRING "OpenGL Push Constant emulation binding"
)

add_definitions(
  -DOCRA_GL_SHADER_SUBPASSINPUT_OFFSET=${OCRA_GL_SHADER_SUBPASSINPUT_OFFSET}
  -DOCRA_GL_SHADER_PUSHCONSTANT_BINDING=${OCRA_GL_SHADER_PUSHCONSTANT_BINDING}
)

set(OCRA_IMPL_INCLUDE_DIR
  ${CMAKE_CURRENT_SOURCE_DIR}/include
  CACHE INTERNAL ""
)

set(OCRA_IMPL_HEADER_FILES
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Assert.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Buffer.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/CommandBuffer.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/CommandPool.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/DescriptorPool.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/DescriptorSet.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/DescriptorSetLayout.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Device.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Enums.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Fence.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Flags.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/GraphicsPipeline.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/GraphicsPipelineStates.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Image.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/ImageSampler.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/ImageView.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Instance.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Memory.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Pipeline.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/PipelineLayout.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/PhysicalDevice.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Queue.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Semaphore.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/ShaderModule.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/VK/Structs.hpp
)

set(OCRA_IMPL_SOURCE_FILES
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Buffer.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/CommandBuffer.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/CommandPool.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Commands.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/DescriptorPool.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/DescriptorSet.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/DescriptorSetLayout.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Device.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Fence.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Image.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/ImageView.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Instance.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Memory.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/PhysicalDevice.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Queue.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Semaphore.cpp
)

if (WIN32)
  set(OCRA_IMPL_HEADER_FILES ${OCRA_IMPL_HEADER_FILES}
  )
  set(OCRA_IMPL_SOURCE_FILES ${OCRA_IMPL_SOURCE_FILES}
  )
endif(WIN32)

add_library(OCRA-API-Implementation ${OCRA_IMPL_SOURCE_FILES} ${OCRA_IMPL_HEADER_FILES})
add_library(OCRA::API::Implementation ALIAS OCRA-API-Implementation)
target_include_directories(OCRA-API-Implementation PRIVATE
  ${OCRA_IMPL_INCLUDE_DIR}
)
set_target_properties(
  OCRA-API-Implementation
  PROPERTIES FOLDER "API"
)

target_link_libraries(OCRA-API-Implementation PUBLIC
  OCRA::API::Interface
  Vulkan::Vulkan
)

if (MSVC_IDE)
  set(CMAKE_DEBUG_POSTFIX "d")
  # Run macro
  GroupSources(src)
  GroupSources(include)
endif ()
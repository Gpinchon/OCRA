cmake_minimum_required(VERSION 3.19)
cmake_policy(SET CMP0074 NEW)
project(OCRA-API-Implementation LANGUAGES CXX)

Fetch_GLEW()

set(
  OCRA_GL_SHADER_PUSHCONSTANT_BINDING 64
  CACHE STRING "OpenGL Push Constant emulation binding"
)

add_definitions(
  -DOCRA_GL_SHADER_PUSHCONSTANT_BINDING=${OCRA_GL_SHADER_PUSHCONSTANT_BINDING}
)

set(OCRA_IMPL_INCLUDE_DIR
  ${CMAKE_CURRENT_SOURCE_DIR}/include
  CACHE INTERNAL ""
)

set(OCRA_IMPL_HEADER_FILES
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Buffer.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Device.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Enums.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Fence.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Flags.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Memory.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Instance.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/ObjectPool.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/PhysicalDevice.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/PushConstants.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Queue.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Semaphore.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/CommandBuffer.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/CommandInterface.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/ExecutionState.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/DescriptorBinding.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/DescriptorSet.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/DescriptorSetLayout.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Image.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/ImageSampler.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/ImageView.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Pipeline.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/TextureBlitter.hpp

  ${OCRA_IMPL_INCLUDE_DIR}/GL/Common/Assert.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Common/FixedSizeMemoryPool.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Common/MemoryPool.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Common/WorkerThread.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Pipeline/ColorBlendState.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Pipeline/DepthStencilState.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Pipeline/MultisampleState.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Pipeline/RasterizationState.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Pipeline/ShaderPipelineState.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Pipeline/TessellationState.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Pipeline/VertexInputState.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/Pipeline/ViewPortState.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/ShaderModule.hpp
  ${OCRA_IMPL_INCLUDE_DIR}/GL/ShaderStage.hpp
)

set(OCRA_IMPL_SOURCE_FILES
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Buffer.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Device.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Fence.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Instance.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Memory.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/PushConstants.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/PhysicalDevice.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Queue.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/QueryPool.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Semaphore.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/CommandBuffer.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/CommandPool.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Commands.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/DescriptorSet.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/DescriptorSetLayout.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/DescriptorPool.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Image.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/ImageSampler.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/ImageView.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Pipeline.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/PipelineGraphics.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/ShaderModule.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/ShaderStage.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/TextureBlitter.cpp
  
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Commands/Buffer.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Commands/CommandBuffer.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Commands/Draw.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Commands/DescriptorSet.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Commands/Image.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Commands/Rendering.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Pipeline/ShaderPipelineState.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/Pipeline/VertexInputState.cpp
)

if (WIN32)
  set(OCRA_IMPL_HEADER_FILES ${OCRA_IMPL_HEADER_FILES}
    ${OCRA_IMPL_INCLUDE_DIR}/GL/Win32/Error.hpp
    ${OCRA_IMPL_INCLUDE_DIR}/GL/Win32/Instance.hpp
    ${OCRA_IMPL_INCLUDE_DIR}/GL/Win32/OpenGL.hpp
    ${OCRA_IMPL_INCLUDE_DIR}/GL/Win32/PhysicalDevice.hpp
    ${OCRA_IMPL_INCLUDE_DIR}/GL/Win32/Window.hpp
  )
  set(OCRA_IMPL_SOURCE_FILES ${OCRA_IMPL_SOURCE_FILES}
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Win32/Error.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Win32/Instance.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Win32/OpenGL.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Win32/PhysicalDevice.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Win32/Window.cpp
  )
endif(WIN32)

add_library(OCRA-API-Implementation ${OCRA_IMPL_SOURCE_FILES} ${OCRA_IMPL_HEADER_FILES})
add_library(OCRA::API::Implementation ALIAS OCRA-API-Implementation)
target_include_directories(OCRA-API-Implementation PRIVATE
  ${OCRA_IMPL_INCLUDE_DIR}
)
set_target_properties(
  OCRA-API-Implementation
  PROPERTIES FOLDER "API"
)

target_link_libraries(OCRA-API-Implementation PUBLIC
  OCRA::API::Interface
  GLEW::GLEW
)

if (MSVC_IDE)
  set(CMAKE_DEBUG_POSTFIX "d")
  # Run macro
  GroupSources(src)
  GroupSources(include)
endif ()
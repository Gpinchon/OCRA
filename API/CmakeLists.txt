cmake_minimum_required(VERSION 3.19)
cmake_policy(SET CMP0074 NEW)

project(OCRA LANGUAGES CXX)

#[[Rendering API]]
set(OCRA_API_IMPL "OpenGL" CACHE STRING
  "API Impl used at compile-time")
set(OCRA_API_IMPL_VALUES
  "OpenGL;Vulkan;DirectX")
set_property(CACHE OCRA_API_IMPL PROPERTY STRINGS ${OCRA_API_IMPL_VALUES})
add_compile_definitions(OCRA_API_IMPL=${OCRA_API_IMPL})

set(OCRA_API_HEADER_LIST
  OCRA/Allocator.hpp
  OCRA/Buffer.hpp
  OCRA/Device.hpp
  OCRA/FrameBuffer.hpp
  OCRA/Handle.hpp
  OCRA/Instance.hpp
  OCRA/Memory.hpp
  OCRA/PhysicalDevice.hpp
  OCRA/QueryPool.hpp
  OCRA/RenderPass.hpp
  OCRA/Queue/Queue.hpp
  OCRA/Queue/Fence.hpp
  OCRA/Queue/Semaphore.hpp
  OCRA/Common/Blend.hpp
  OCRA/Common/Compare.hpp
  OCRA/Common/Extent.hpp
  OCRA/Common/Extent2D.hpp
  OCRA/Common/Extent3D.hpp
  OCRA/Common/IndexType.hpp
  OCRA/Common/Logic.hpp
  OCRA/Common/Offset3D.hpp
  OCRA/Common/Rect2D.hpp
  OCRA/Common/Rect3D.hpp
  OCRA/Common/ScissorTest.hpp
  OCRA/Common/SharingMode.hpp
  OCRA/Common/Stencil.hpp
  OCRA/Common/Timer.hpp
  OCRA/Common/Vec.hpp
  OCRA/Common/Vec2.hpp
  OCRA/Common/Vec3.hpp
  OCRA/Common/Vec4.hpp
  OCRA/Common/Vec_Boolean.hpp
  OCRA/Common/Vec_Functor.hpp
  OCRA/Common/Vec_Interpolation.hpp
  OCRA/Common/Vec_Math.hpp
  OCRA/Common/VertexType.hpp
  OCRA/Command/Buffer.hpp
  OCRA/Command/Draw.hpp
  OCRA/Command/MemoryBarrier.hpp
  OCRA/Command/Pool.hpp
  OCRA/Command/Query.hpp
  OCRA/Command/Scissor.hpp
  OCRA/Command/ViewPort.hpp
  OCRA/Descriptor/Set.hpp
  OCRA/Descriptor/SetLayout.hpp
  OCRA/Descriptor/Pool.hpp
  OCRA/Descriptor/Type.hpp
  OCRA/Image/Descriptor.hpp
  OCRA/Image/Filter.hpp
  OCRA/Image/Format.hpp
  OCRA/Image/Image.hpp
  OCRA/Image/Sampler.hpp
  OCRA/Image/Usage.hpp
  OCRA/Image/View.hpp
  OCRA/Pipeline/ColorBlendState.hpp
  OCRA/Pipeline/DepthStencilState.hpp
  OCRA/Pipeline/Graphics.hpp
  OCRA/Pipeline/InputAssemblyState.hpp
  OCRA/Pipeline/Layout.hpp
  OCRA/Pipeline/MultisampleState.hpp
  OCRA/Pipeline/Pipeline.hpp
  OCRA/Pipeline/RasterizationState.hpp
  OCRA/Pipeline/ShaderPipelineState.hpp
  OCRA/Pipeline/TessellationState.hpp
  OCRA/Pipeline/VertexInputState.hpp
  OCRA/Pipeline/ViewPortState.hpp
  OCRA/Primitive/Topology.hpp
  OCRA/Shader/Module.hpp
  OCRA/Shader/Stage.hpp
)

set(INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/include)
set(HEADER_PATH ${CMAKE_CURRENT_BINARY_DIR}/include/OCRA/OCRA.hpp)

file(WRITE ${HEADER_PATH}
"#pragma once
/**
* This file contains every includes
*/

")
foreach(File ${OCRA_API_HEADER_LIST})
  file(APPEND ${HEADER_PATH}
  "#include<${File}>\n")
endforeach()

list(TRANSFORM OCRA_API_HEADER_LIST PREPEND "${CMAKE_CURRENT_SOURCE_DIR}/include/" OUTPUT_VARIABLE OCRA_API_HEADER_FILES)

add_library(OCRA-API-Interface INTERFACE ${OCRA_API_HEADER_FILES})
add_library(OCRA::API::Interface ALIAS OCRA-API-Interface)
set_target_properties(OCRA-API-Interface PROPERTIES LINKER_LANGUAGE CXX)
target_include_directories(OCRA-API-Interface INTERFACE
  "${CMAKE_CURRENT_SOURCE_DIR}/include"
  "${INCLUDE_DIR}"
)

set_target_properties(
  OCRA-API-Interface
  PROPERTIES FOLDER "API"
)

if (OCRA_API_IMPL STREQUAL "OpenGL")
add_subdirectory(Driver/OpenGL)
endif (OCRA_API_IMPL STREQUAL "OpenGL")

if(MSVC_IDE)
  set(CMAKE_DEBUG_POSTFIX "d")
  # Run macro
  GroupSources(src)
  GroupSources(include)
endif()

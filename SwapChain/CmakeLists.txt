cmake_minimum_required(VERSION 3.19)
cmake_policy(SET CMP0074 NEW)

project(OCRA LANGUAGES CXX)

#[[SwapChain Impl]]
set(OCRA_SWAPCHAIN_IMPL "OpenGL" CACHE STRING
  "SwapChain Impl used at compile-time")
set(RenderingAPIValues
  "OpenGL;OpenGL-DX;Direct-X;Vulkan")
set_property(CACHE OCRA_SWAPCHAIN_IMPL PROPERTY STRINGS ${RenderingAPIValues})
add_compile_definitions(OCRA_SWAPCHAIN_IMPL=${OCRA_SWAPCHAIN_IMPL})

set_property(GLOBAL PROPERTY USE_FOLDERS ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS_RELEASE "-Ox")

set(OCRA_SWAPCHAIN_HEADER_LIST
  OCRA/SwapChain/Core.hpp
  OCRA/SwapChain/Enums.hpp
  OCRA/SwapChain/Handles.hpp
  OCRA/SwapChain/Structs.hpp
  OCRA/SwapChain/Methods/Device.hpp
  OCRA/SwapChain/Methods/Instance.hpp
  OCRA/SwapChain/Methods/SwapChain.hpp
)

set(INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/include)
set(HEADER_PATH ${CMAKE_CURRENT_BINARY_DIR}/include/OCRA/SwapChain.hpp)

file(WRITE ${HEADER_PATH}
"#pragma once
/**
* This file contains every includes
*/

")
foreach(File ${OCRA_SWAPCHAIN_HEADER_LIST})
  file(APPEND ${HEADER_PATH}
  "#include<${File}>\n")
endforeach()

list(TRANSFORM OCRA_SWAPCHAIN_HEADER_LIST
  PREPEND "${CMAKE_CURRENT_SOURCE_DIR}/include/"
  OUTPUT_VARIABLE OCRA_SWAPCHAIN_HEADER_FILES)

add_library(OCRA-SwapChain-Interface INTERFACE ${OCRA_SWAPCHAIN_HEADER_FILES} ${HEADER_PATH})
add_library(OCRA::SwapChain::Interface ALIAS OCRA-SwapChain-Interface)
set_target_properties(OCRA-SwapChain-Interface PROPERTIES LINKER_LANGUAGE CXX)
target_include_directories(OCRA-SwapChain-Interface INTERFACE
  "${CMAKE_CURRENT_SOURCE_DIR}/include"
  "${INCLUDE_DIR}")

set_target_properties(
  OCRA-SwapChain-Interface
  PROPERTIES FOLDER "SwapChain"
)

if (OCRA_SWAPCHAIN_IMPL STREQUAL "OpenGL")
  add_subdirectory(Driver/OpenGL)
elseif (OCRA_SWAPCHAIN_IMPL STREQUAL "OpenGL-DX")
  add_subdirectory(Driver/OpenGL-DX)
elseif (OCRA_SWAPCHAIN_IMPL STREQUAL "Vulkan")
  add_subdirectory(Driver/Vulkan)
endif (OCRA_SWAPCHAIN_IMPL STREQUAL "OpenGL")

if(MSVC_IDE)
  set(CMAKE_DEBUG_POSTFIX "d")
  # Run macro
  GroupSources(src)
  GroupSources(include)
endif()

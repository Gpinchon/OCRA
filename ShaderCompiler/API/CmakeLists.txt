cmake_minimum_required(VERSION 3.19)
cmake_policy(SET CMP0074 NEW)

project(OCRACompiler LANGUAGES CXX)

set_property(GLOBAL PROPERTY USE_FOLDERS ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS_RELEASE "-Ox")

include(FetchContent)

Fetch_GoogleTest()
Fetch_GLSLang()
Fetch_SPIRVHeaders()
Fetch_SPIRVCross()

set(
  OCRA_GL_SHADER_PUSHCONSTANT_BINDING 64
  CACHE STRING "OpenGL Push Constant emulation binding"
)

add_definitions(
  -DOCRA_GL_SHADER_PUSHCONSTANT_BINDING=${OCRA_GL_SHADER_PUSHCONSTANT_BINDING}
)


set(OCRA_SHADER_COMPILER_API_HEADER_FILES
  ${CMAKE_CURRENT_SOURCE_DIR}/include/OCRA/ShaderCompiler/Compiler.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/OCRA/ShaderCompiler/Enums.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/OCRA/ShaderCompiler/Handle.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/OCRA/ShaderCompiler/Structs.hpp
  ${CMAKE_CURRENT_SOURCE_DIR}/include/OCRA/ShaderCompiler/Impl/Compiler.hpp
)

set(OCRA_SHADER_COMPILER_API_SOURCE_FILES
  ${CMAKE_CURRENT_SOURCE_DIR}/src/ShaderCompiler/Compiler.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/ShaderCompiler/OpenGL.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/src/ShaderCompiler/Vulkan.cpp
)

add_library(OCRA-ShaderCompiler-API STATIC ${OCRA_SHADER_COMPILER_API_HEADER_FILES} ${OCRA_SHADER_COMPILER_API_SOURCE_FILES})
add_library(OCRA::ShaderCompiler::API ALIAS OCRA-ShaderCompiler-API)
set_target_properties(OCRA-ShaderCompiler-API PROPERTIES LINKER_LANGUAGE CXX)
target_include_directories(OCRA-ShaderCompiler-API PUBLIC
  "${CMAKE_CURRENT_SOURCE_DIR}/include"
)
target_link_libraries(OCRA-ShaderCompiler-API PUBLIC
  glslang
  SPIRV
  glslang-default-resource-limits
  spirv-cross-core
  spirv-cross-glsl
  spirv-cross-reflect
)
set_target_properties(
  OCRA-ShaderCompiler-API
  PROPERTIES FOLDER "ShaderCompiler"
)

if(MSVC_IDE)
  # Run macro
  GroupSources(src)
  GroupSources(include)
endif()
